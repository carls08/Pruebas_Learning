# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1y9QYUJRl8Lj89V8RyomvckoJAI0OBE1K
"""

import pandas as pd
import matplotlib.pyplot as plt
from sklearn import linear_model,datasets
import numpy as np
from sklearn.metrics import mean_squared_error
from sklearn.preprocessing import LabelEncoder

#SE LEE EL ARCHIVO EXCEL
df1 =pd.read_excel("ENB2012_data.xlsx")
#LO CONVERTIMOS A CSV
df1.to_csv("ENB_DATA.csv")


#SE LEE EL ARCHIVO CVS QUE CONVERTIMOS DELIMITADO POR COMAS .CSV
datos=pd.read_csv("ENB_DATA.csv",delimiter=",")
#APLICAMOS EL METODO DE DATAFRAME
datos=pd.DataFrame(datos)
#IMRPIMIMOS LOS PRIMEROS 5 VALORES
datos.head()

#CONTADOR DE LOS VALORES DE Y1 Y Y2
df1[['Y1','Y2']].value_counts()
#GRAFICA DE PRUEBA DE Y2
datos[['Y2']].value_counts().plot(kind='pie', autopct='%.2f',figsize=(5,5), title='Carga de calefaccion y refrigeracion')

plt.hist(x=datos[['Y1']], color='#4666AA', rwidth=0.9 )

plt.hist(x=datos[['Y2']], color='#4666AA', rwidth=0.9 )

plt.boxplot((df1[['Y2']]))
plt.show()

datos.info()

datos.mode()

datos.describe()

datos.isnull().sum()

datos.corr()

#VARIABLES INDEPENDIENTES
X =df1[['X1','X2','X3','X4','X5','X6','X7','X8']]
#VARIABLES DEPENDIENTES
y=df1[['Y1','Y2']]

from sklearn.model_selection import train_test_split

X_train, X_test, y_train, y_test = train_test_split(X,y,test_size=0.3)

regresion=linear_model.LinearRegression()
#ENTRENAOS EL MODELO 
regresion=regresion.fit(X_train,y_train)

print("El valor de la pendiente es: "+str(regresion.coef_))
print("Elvalor de la b es: "+str(regresion.intercept_))
r2=regresion.score(X_train,y_train)
print(r2)

Valor_b=regresion.coef_
Valor_a=regresion.intercept_
y_pred=regresion.predict(X_test)

#GRAFICAMOS 
plt.scatter(y_pred,y_test)
plt.xlabel("independiente")
plt.ylabel("Dependiente")
plt.plot(y_pred, y_pred, color="Red")
plt.show()

regresion.predict(X_test)

#mse=mean_squared_error(y_test, y_pred)
#print("La raiz del error cuadratico es: ",np.sqrt(mse))